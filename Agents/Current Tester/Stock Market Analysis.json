{
  "name": "Stock Market Analysis",
  "nodes": [
    {
      "parameters": {
        "public": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -768,
        304
      ],
      "id": "96e87849-0c90-4891-90c5-8b7f0f3755c2",
      "name": "When chat message received",
      "webhookId": "01352fb8-cc7d-4316-a8f9-76aaca6cfe21"
    },
    {
      "parameters": {
        "model": "llama3:latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmOllama",
      "typeVersion": 1,
      "position": [
        -944,
        672
      ],
      "id": "9719134d-faf8-48bc-aefb-3baae12495fc",
      "name": "Ollama Model",
      "credentials": {
        "ollamaApi": {
          "id": "qo0wrMYjdDvi69Q3",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a strict data extraction assistant.\n\nYour only task is to extract the NSE stock ticker symbol from the following user message.\n\n\nRespond with exactly one word: the ticker symbol matching the user input, in uppercase with `.NS` suffix.\n\nIf no valid ticker is found, respond with: NONE\n\nDo NOT provide explanations, extra text, or formatting. ONLY respond with the ticker or NONE.\n\nUser message: \"{{ $json.chatInput }}\"\n",
        "messages": {
          "messageValues": [
            {
              "message": "=You are a strict data extraction assistant.\n\nYour only task is to extract the NSE stock ticker symbol from the user's input message.\n\nThe valid tickers are:\n\nRELIANCE.NS, TCS.NS, HDFCBANK.NS, INFY.NS, ICICIBANK.NS, HINDUNILVR.NS, SBIN.NS, ITC.NS, BHARTIARTL.NS, KOTAKBANK.NS, LT.NS, AXISBANK.NS, MARUTI.NS, ASIANPAINT.NS, NESTLEIND.NS, HCLTECH.NS, BAJFINANCE.NS, WIPRO.NS, ULTRACEMCO.NS, TITAN.NS, TATAMOTORS.NS, SUNPHARMA.NS, NTPC.NS, POWERGRID.NS, BAJAJFINSV.NS, DRREDDY.NS, TECHM.NS, ONGC.NS, TATASTEEL.NS, INDUSINDBK.NS, M&M.NS, ADANIENT.NS, COALINDIA.NS, JSWSTEEL.NS, CIPLA.NS, GRASIM.NS, HEROMOTOCO.NS, UPL.NS, BRITANNIA.NS, EICHERMOT.NS, HDFCLIFE.NS, SBILIFE.NS, DIVISLAB.NS, HINDALCO.NS, BAJAJ-AUTO.NS, SHREECEM.NS, APOLLOHOSP.NS, HDFCAMC.NS, ADANIPORTS.NS, BPCL.NS, PNB.NS, BANKBARODA.NS, FEDERALBNK.NS, IDFCFIRSTB.NS, AUBANK.NS, BANDHANBNK.NS, TVSMOTOR.NS, ASHOKLEY.NS, FORCEMOT.NS, MRF.NS, BALKRISIND.NS, CEATLTD.NS, APOLLOTYRE.NS, JKTYRE.NS, BHARATFORG.NS, LUPIN.NS, AUROPHARMA.NS, BIOCON.NS, ZYDUSLIFE.NS, ALKEM.NS, GLENMARK.NS, TORNTPHARM.NS, IPCALAB.NS, ABBOTINDIA.NS, PFIZER.NS, GSK.NS, VEDL.NS, SAIL.NS, NMDC.NS, JINDALSTEL.NS, NATIONALUM.NS, APLAPOLLO.NS, HINDZINC.NS, RATNAMANI.NS, WELCORP.NS, MOIL.NS, LTIM.NS, MPHASIS.NS, PERSISTENT.NS, COFORGE.NS, LTTS.NS, DABUR.NS, MARICO.NS, GODREJCP.NS, COLPAL.NS, UBL.NS, TATACONSUM.NS, EMAMILTD.NS, PGHH.NS, VBL.NS\n\nRespond with exactly one word: the ticker symbol matching the user input, in uppercase with `.NS` suffix.\n\nIf no valid ticker is found, respond with: NONE\n\nDo NOT provide explanations, extra text, or formatting. ONLY respond with the ticker or NONE.\n"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        -544,
        304
      ],
      "id": "214018fa-4af8-4a67-bd3b-de741fd077e9",
      "name": "Extract Ticker from User Prompt"
    },
    {
      "parameters": {
        "url": "=https://query1.finance.yahoo.com/v8/finance/chart/{{ $json.text }}?range=5d&interval=1d",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -176,
        304
      ],
      "id": "05210d78-49b4-4c26-8f82-4a6035238a2c",
      "name": "Yahoo Finance Data"
    },
    {
      "parameters": {
        "url": "https://newsapi.org/v2/everything",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "q",
              "value": "={{ $json.chart.result[0].meta.longName }}"
            },
            {
              "name": "language",
              "value": "en"
            },
            {
              "name": "sortBy",
              "value": "publishedAt"
            },
            {
              "name": "apiKey",
              "value": "=b07f985070194c3f8b61784c80711c4b"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        64,
        352
      ],
      "id": "e22885ab-2b84-42a2-9e5b-83bf46d8d510",
      "name": "Fetch News Headlines"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Here is the stock data for {{ $('Yahoo Finance Data').item.json.chart.result[0].meta.symbol }} ({{ $('Yahoo Finance Data').item.json.chart.result[0].meta.longName }}):\n\n- Current Price: ₹{{ $('Yahoo Finance Data').item.json.chart.result[0].meta.regularMarketPrice }}\n- Day High: ₹{{ $('Yahoo Finance Data').item.json.chart.result[0].meta.regularMarketDayHigh }}, Day Low: ₹{{ $('Yahoo Finance Data').item.json.chart.result[0].meta.regularMarketDayLow }}\n- 52-Week High: ₹{{ $('Yahoo Finance Data').item.json.chart.result[0].meta.fiftyTwoWeekHigh }}, 52-Week Low: ₹{{ $('Yahoo Finance Data').item.json.chart.result[0].meta.fiftyTwoWeekLow }}\n- Previous Close: ₹{{ $('Yahoo Finance Data').item.json.chart.result[0].meta.chartPreviousClose }}\n- Trading Volume: {{ $('Yahoo Finance Data').item.json.chart.result[0].meta.regularMarketVolume }}\n\nTechnical indicators (last 5 days closing prices):  \n[{{ $('Yahoo Finance Data').item.json.chart.result[0].indicators.quote[0].close[0] }}, {{ $('Yahoo Finance Data').item.json.chart.result[0].indicators.quote[0].close[1] }}, {{ $('Yahoo Finance Data').item.json.chart.result[0].indicators.quote[0].close[2] }}, {{ $('Yahoo Finance Data').item.json.chart.result[0].indicators.quote[0].close[3] }}, {{ $('Yahoo Finance Data').item.json.chart.result[0].indicators.quote[0].close[4] }}]\n\nRecent news articles related to {{ $('Yahoo Finance Data').item.json.chart.result[0].meta.symbol }}:\n\n1. Title: {{ $json.newsArticles[0].title }}  \n   Description: {{ $json.newsArticles[0].description }}\n\n2. Title: {{ $json.newsArticles[1].title }}  \n   Description: {{ $json.newsArticles[1].description }}\n\n3. Title: {{ $json.newsArticles[2].title }}  \n   Description: {{ $json.newsArticles[2].description }}\n\n4. Title: {{ $json.newsArticles[3].title }}  \n   Description: {{ $json.newsArticles[3].description }}\n\n5. Title: {{ $json.newsArticles[4].title }}  \n   Description: {{ $json.newsArticles[4].description }}\n\nPlease summarize the stock’s current market condition, news sentiment, trading signals, and give your insights and recommendation in the required format.\n",
        "messages": {
          "messageValues": [
            {
              "message": "=You are a professional financial analyst AI assistant. Your role is to analyze stock market data and related news, then generate a clear and concise report in the specified format.\n\nAlways structure your response as follows:\n\nMarket Status:\n[Summarize key metrics such as current price, day high/low, 52-week high/low, previous close, and volume. Mention if price is up/down from previous close. Add brief comment on whether stock appears bullish, bearish, or consolidating.]\n\nNews Sentiment:\n[Summarize the 5 latest news headlines with company relevance. Group by tone (positive, negative, neutral) and mention any that may impact sentiment or price.]\n\nTechnical Signals & Trends:\n\nResistance level: ₹[value]\n\nSupport level: ₹[value]\n\nVolume trend: [high/low/neutral activity]\n\nNotable indicators: [e.g., moving average direction, breakout potential, gap-up/down]\n\nInsights & Recommendation:\n[Provide concise actionable insight. E.g., cautious bullish trend, neutral outlook with support holding, or early bearish signs. Mention any watch-outs or confirmations needed.]\n\nRisks & Caveats:\n[Highlight external risks (market sentiment, geopolitical, etc.) or internal company risks that might affect movement.]\n\nAlways write in professional, simple English suitable for a retail investor. Do not mention tools or templates used. Focus on clarity, brevity, and financial relevance."
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        -368,
        624
      ],
      "id": "5bf0e01e-7003-4e0f-8434-074a4bac3594",
      "name": "Financial Analyst AI Agent"
    },
    {
      "parameters": {
        "jsCode": "const newsData = items[0].json; \n\n// Confirm articles exist and slice safely\nconst limitedArticles = (newsData.articles && Array.isArray(newsData.articles)) ? newsData.articles.slice(0, 5) : [];\n\nreturn [\n  {\n    json: {\n      newsArticles: limitedArticles\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -592,
        576
      ],
      "id": "9d98df73-7335-40a0-9976-d6f6ffaa2e39",
      "name": "Filter"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1dqI7NnJBPltSghF7PvYE8Kbb3bUgBMspo3wngUiUnqQ",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "Sheet1",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [
            "text"
          ],
          "schema": [
            {
              "id": "text",
              "displayName": "text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -16,
        624
      ],
      "id": "a7a59933-95e3-4d4f-8353-44711f57b7f1",
      "name": "Append row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "cL3Xb2kePEAjp22D",
          "name": "Google Sheets account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Extract Ticker from User Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Model": {
      "ai_languageModel": [
        [
          {
            "node": "Extract Ticker from User Prompt",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Financial Analyst AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Extract Ticker from User Prompt": {
      "main": [
        [
          {
            "node": "Yahoo Finance Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Yahoo Finance Data": {
      "main": [
        [
          {
            "node": "Fetch News Headlines",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch News Headlines": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Financial Analyst AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Financial Analyst AI Agent": {
      "main": [
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "4a9a719b-84b9-44d1-a183-5569c82c4460",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ff3fc446c8e7e5a30c11bf9e00828efa9738b83c57584b8e2e1ccd62369c39d6"
  },
  "id": "5s7O0JmdT3T7iwUH",
  "tags": []
}